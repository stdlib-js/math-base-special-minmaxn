// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,l=n.__lookupGetter__,i=n.__lookupSetter__;r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(l.call(e,r)||i.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&a&&a.call(e,r,t.get),p&&u&&u.call(e,r,t.set),e};var c=r;var _=Number.NEGATIVE_INFINITY;function f(e){return 0===e&&1/e===_}var p=Number.POSITIVE_INFINITY;function b(e){return 0===e&&1/e===p}function s(e){return e!=e}function v(e,r,t,n,o){var a,u,l,i,c;if(t=arguments[(a=arguments.length)-3],n=arguments[a-2],o=arguments[a-1],4===a)return t[o]=e,t[o+n]=e,t;if(5===a)return s(e)||s(r)?(t[o]=NaN,t[o+n]=NaN,t):e===r&&0===e?f(e)?(t[o]=e,t[o+n]=r,t):(t[o]=r,t[o+n]=e,t):e<r?(t[o]=e,t[o+n]=r,t):(t[o]=r,t[o+n]=e,t);for(u=p,l=_,c=0;c<a-3;c++){if(s(i=arguments[c]))return t[o]=NaN,t[o+n]=NaN,t;(i<u||0===i&&i===u&&f(i))&&(u=i),(i>l||0===i&&i===l&&b(i))&&(l=i)}return t[o]=u,t[o+n]=l,t}function y(){var e,r;for(e=[],r=0;r<arguments.length;r++)e.push(arguments[r]);return e.push([0,0],1,0),v.apply(null,e)}c(y,"assign",{configurable:!1,enumerable:!1,writable:!1,value:v});export{v as assign,y as default};
//# sourceMappingURL=mod.js.map
